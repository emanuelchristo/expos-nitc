// INT 6 - READ

alias sysCallNum R0;
alias fileDescriptor R1;
alias varLogicalAddr R2;
alias retAddr R3;

// Extracting arguments from stack
sysCallNum = [[PTBR + 2*(SP-5)/512]*512 + (SP-5)%512];
fileDescriptor = [[PTBR + 2*(SP-4)/512]*512 + (SP-4)%512];
varLogicalAddr = [[PTBR + 2*(SP-3)/512]*512 + (SP-3)%512];
retAddr = [PTBR + 2*(SP-1)/512]*512 + (SP-1)%512;

// Setting mode flag
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = sysCallNum;

// Switching to kernel stack
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 - 1;

if(fileDescriptor != -1) then
	[retAddr] = -1;
else
	// Calling terminal read
	multipush(R0, R1, R2, R3);
	R1 = 4;
	R3 = varLogicalAddr;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_4;
	multipop(R0, R1, R2, R3);
	[retAddr] = 0;
endif;

// Setting mode flag
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
// Switching to kernel stack
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;