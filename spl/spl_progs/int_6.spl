// INT 6 - READ

// Setting mode flag to system call number
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 7;

alias userSP R0;
userSP = SP;

// Switching to kernel stack
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 - 1;

alias fileDescriptor R1;
fileDescriptor = [[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + 2*(userSP - 4)/512]*512 + (userSP - 4)%512];

alias wordAddress R2;

if(fileDescriptor != -1) then
	// Setting return value
	[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + 2*(userSP - 1)/512]*512 + (userSP - 1)%512] = -1;
else
	wordAddress = [[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + 2*(userSP - 3)/512]*512 + (userSP - 3)%512];
	multipush(R1, R2, R3);
	R1 = 4;
	R3 = wordAddress;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_4;
	multipop(R1, R2, R3);
	// Setting return value
	[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + 2*(userSP - 1)/512]*512 + (userSP - 1)%512] = 0;
endif;

// Resetting mode flag
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;

// Switching to user stack
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;