// INT 12 - LOGOUT

alias sysCallNum R0;
alias retAddr R1;

// Extracting arguments from stack
sysCallNum = [[PTBR + 2*(SP-5)/512]*512 + (SP-5)%512];
retAddr = [PTBR + 2*(SP-1)/512]*512 + (SP-1)%512;

alias processTableEntry R2;
processTableEntry = PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16;

// Setting mode flag
[processTableEntry + 9] = sysCallNum;

// Switching to kernel stack
[processTableEntry + 13] = SP;
SP = [processTableEntry + 11]*512 - 1;

// If current process is not shell
if([SYSTEM_STATUS_TABLE + 1] != SHELL_PROCESS) then
  [retAddr] = -1;
  // Returning to user process
  [processTableEntry + 9] = 0;
  SP = [processTableEntry + 13];
  ireturn;
endif;

// Calling kill all
multipush(R0, R1, R2);
R1 = KILL_ALL;
R2 = [SYSTEM_STATUS_TABLE + 1];
call MOD_1;
multipop(R0, R1, R2);

// Setting process state
[processTableEntry + 4] = TERMINATED;

// Setting entry point address of shell program to top of user stack
[[PTBR + 16]*512] = [[PTBR + 8]*512 + 1];
[processTableEntry + 13] = 4096;

// Waking up login process
[PROCESS_TABLE + 16 + 4] = READY;

// Setting current user id
[SYSTEM_STATUS_TABLE] = 0; // Kernel user

call MOD_5;